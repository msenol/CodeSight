openapi: 3.0.3
info:
  title: CodeSight MCP Server API
  description: |
    High-performance Code Intelligence MCP Server API providing natural language search,
    code analysis, and comprehensive codebase insights through REST endpoints and MCP tools.

    This API enables AI assistants to understand and query codebases through natural language,
    supporting 15+ programming languages with enterprise-grade performance and offline capabilities.
  version: 0.1.0
  contact:
    name: CodeSight Team
    email: support@codesight-mcp.com
    url: https://codesight-mcp.com
  license:
    name: MIT
    url: https://github.com/your-org/codesight-mcp/blob/main/LICENSE
servers:
  - url: http://localhost:4000
    description: Development server
  - url: https://api.codesight-mcp.com
    description: Production server

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: Simple health check to verify server status
      operationId: healthCheck
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/codebases:
    get:
      tags:
        - Codebases
      summary: List codebases
      description: Retrieve all indexed codebases
      operationId: listCodebases
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved codebases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodebaseListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Codebases
      summary: Create codebase
      description: Create a new codebase entry for indexing
      operationId: createCodebase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCodebaseRequest'
      responses:
        '201':
          description: Codebase created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodebaseResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/queries:
    post:
      tags:
        - Queries
      summary: Search code
      description: Perform natural language or structured search across codebases
      operationId: searchCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        '200':
          description: Search completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid search parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/tools/search_code:
    post:
      tags:
        - MCP Tools
      summary: Search code (MCP Tool)
      description: MCP tool for natural language code search
      operationId: mcpSearchCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [query]
              properties:
                query:
                  type: string
                  description: Search query
                codebase_id:
                  type: string
                  description: Codebase ID to search in
                limit:
                  type: integer
                  minimum: 1
                  maximum: 100
                  default: 10
      responses:
        '200':
          description: Search completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCPToolResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /metrics:
    get:
      tags:
        - Monitoring
      summary: Get metrics
      description: Retrieve Prometheus-compatible metrics
      operationId: getMetrics
      responses:
        '200':
          description: Metrics retrieved successfully
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        uptime:
          type: integer

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string

    CodebaseListResponse:
      type: object
      properties:
        success:
          type: boolean
        codebases:
          type: array
          items:
            $ref: '#/components/schemas/Codebase'
        pagination:
          $ref: '#/components/schemas/Pagination'

    CodebaseResponse:
      type: object
      properties:
        success:
          type: boolean
        codebase:
          $ref: '#/components/schemas/Codebase'

    Codebase:
      type: object
      required:
        - id
        - name
        - path
        - status
        - created_at
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        path:
          type: string
        status:
          type: string
          enum: [unindexed, indexing, indexed, error]
        created_at:
          type: string
          format: date-time
        size_bytes:
          type: integer
        file_count:
          type: integer

    CreateCodebaseRequest:
      type: object
      required:
        - name
        - path
      properties:
        name:
          type: string
        path:
          type: string
        language:
          type: string
        description:
          type: string

    SearchRequest:
      type: object
      required:
        - query
        - codebase_id
      properties:
        query:
          type: string
        codebase_id:
          type: string
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 10

    SearchResponse:
      type: object
      properties:
        success:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/search/SearchResult'
        pagination:
          $ref: '#/components/schemas/Pagination'
        execution_time_ms:
          type: integer

    SearchResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        file_path:
          type: string
        line_number:
          type: integer
        score:
          type: number
        snippet:
          type: string

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer

    MCPToolResponse:
      type: object
      properties:
        success:
          type: boolean
        result:
          type: object
        metadata:
          type: object

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Health
    description: Health check endpoints
  - name: Codebases
    description: Codebase management
  - name: Queries
    description: Search operations
  - name: MCP Tools
    description: MCP protocol tools
  - name: Monitoring
    description: Metrics and monitoring