{
  "version": "v0.11.1",
  "metadata": {
    "export_date": "2025-09-21T21:30:00.000Z",
    "gorev_version": "v0.11.1",
    "database_version": "1.9",
    "total_tasks": 20,
    "total_projects": 1,
    "exported_by": "gorev_import",
    "description": "Code Intelligence MCP Server Tasks"
  },
  "projects": [
    {
      "id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "isim": "Code Intelligence MCP Server",
      "tanim": "High-performance Code Intelligence MCP Server - AI assistants için doğal dil ile kod anlama ve sorgulama sistemi. Rust/TypeScript hibrit mimarisi, 15+ dil desteği, 100K+ dosya ölçeğinde monorepo desteği.",
      "olusturma_tarih": "2025-09-21T21:22:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:22:00.000Z"
    }
  ],
  "tasks": [
    {
      "id": "t001-project-structure",
      "proje_id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "baslik": "T001: Project Structure Setup",
      "aciklama": "Create project structure with Rust core and TypeScript MCP directories\n\nDetails:\n- rust-core/ for Rust components\n- typescript-mcp/ for Node.js components\n- tests/ for integration tests\n- docs/ for documentation\n- Configure monorepo with workspace settings",
      "durum": "beklemede",
      "oncelik": "yuksek",
      "olusturma_tarih": "2025-09-21T21:30:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:30:00.000Z",
      "son_tarih": "2025-09-23T00:00:00.000Z",
      "etiketler": "setup,infrastructure,rust,typescript",
      "parent_id": null
    },
    {
      "id": "t002-rust-workspace",
      "proje_id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "baslik": "T002: Initialize Rust Workspace",
      "aciklama": "Initialize Rust workspace in rust-core/ with Cargo.toml\n\nDependencies:\n- tokio (async runtime)\n- rayon (parallel processing)\n- tree-sitter (parsing)\n- tantivy (full-text search)\n- dashmap (concurrent data structures)\n- napi-rs (FFI bindings)",
      "durum": "beklemede",
      "oncelik": "yuksek",
      "olusturma_tarih": "2025-09-21T21:30:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:30:00.000Z",
      "son_tarih": "2025-09-23T00:00:00.000Z",
      "etiketler": "setup,rust,cargo",
      "parent_id": null
    },
    {
      "id": "t003-typescript-project",
      "proje_id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "baslik": "T003: Initialize TypeScript Project",
      "aciklama": "Initialize TypeScript project in typescript-mcp/ with package.json\n\nDependencies:\n- @modelcontextprotocol/sdk\n- fastify (HTTP server)\n- bullmq (job queues)\n- pino (logging)\n- vitest (testing)",
      "durum": "beklemede",
      "oncelik": "yuksek",
      "olusturma_tarih": "2025-09-21T21:30:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:30:00.000Z",
      "son_tarih": "2025-09-23T00:00:00.000Z",
      "etiketler": "setup,typescript,nodejs",
      "parent_id": null
    },
    {
      "id": "t009-test-search-code",
      "proje_id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "baslik": "T009: Contract Test - search_code Tool",
      "aciklama": "Contract test for search_code MCP tool in tests/contract/test_search_code.ts\n\nTest Scenarios:\n- Natural language query parsing\n- Context lines configuration\n- Result ranking validation\n- Performance requirements (<200ms)\n- Pagination support",
      "durum": "beklemede",
      "oncelik": "yuksek",
      "olusturma_tarih": "2025-09-21T21:30:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:30:00.000Z",
      "son_tarih": "2025-09-25T00:00:00.000Z",
      "etiketler": "test,mcp,contract,parallel",
      "parent_id": null
    },
    {
      "id": "t034-codebase-model",
      "proje_id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "baslik": "T034: Implement Codebase Model",
      "aciklama": "Codebase model in rust-core/src/models/codebase.rs\n\nFields:\n- id: UUID\n- name: String\n- path: PathBuf\n- size_bytes: u64\n- file_count: u32\n- language_stats: HashMap<String, u32>\n- status: enum (unindexed, indexing, indexed, error)\n\nValidations:\n- Path must be absolute and exist\n- Name must be unique\n- size_bytes >= 0\n- file_count >= 0",
      "durum": "beklemede",
      "oncelik": "yuksek",
      "olusturma_tarih": "2025-09-21T21:30:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:30:00.000Z",
      "son_tarih": "2025-09-27T00:00:00.000Z",
      "etiketler": "rust,model,database,parallel",
      "parent_id": null
    },
    {
      "id": "t046-parser-service",
      "proje_id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "baslik": "T046: Parser Service with Tree-sitter",
      "aciklama": "Parser service in rust-core/src/services/parser.rs\n\nFeatures:\n- Load language grammars dynamically\n- Support 15+ languages (TS, JS, Python, Rust, Go, Java, C++, C#, Ruby, PHP, Swift, Kotlin, Scala, Elixir, Zig)\n- Incremental parsing for real-time updates\n- Error recovery for invalid code\n- AST visitor pattern for traversal",
      "durum": "beklemede",
      "oncelik": "yuksek",
      "olusturma_tarih": "2025-09-21T21:30:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:30:00.000Z",
      "son_tarih": "2025-09-28T00:00:00.000Z",
      "etiketler": "rust,service,tree-sitter,parser",
      "parent_id": null
    },
    {
      "id": "t055-mcp-search-code",
      "proje_id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "baslik": "T055: Implement search_code MCP Tool",
      "aciklama": "search_code tool in typescript-mcp/src/tools/search-code.ts\n\nImplementation:\n- Call Rust search service via FFI\n- Format results for MCP protocol\n- Add caching layer for frequent queries\n- Implement query intent detection\n- Support natural language, structured, and regex queries",
      "durum": "beklemede",
      "oncelik": "yuksek",
      "olusturma_tarih": "2025-09-21T21:30:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:30:00.000Z",
      "son_tarih": "2025-09-30T00:00:00.000Z",
      "etiketler": "typescript,mcp,tool,api",
      "parent_id": null
    },
    {
      "id": "t069-ffi-bridge",
      "proje_id": "1580dd33-f91f-4b72-a09d-5faae7c9a9bf",
      "baslik": "T069: Napi-rs FFI Bridge Implementation",
      "aciklama": "FFI bindings in rust-core/src/ffi/mod.rs\n\nFeatures:\n- Export Rust functions to Node.js\n- Zero-copy data transfer for performance\n- Async function support with tokio\n- Error handling across FFI boundary\n- Type-safe TypeScript bindings generation",
      "durum": "beklemede",
      "oncelik": "yuksek",
      "olusturma_tarih": "2025-09-21T21:30:00.000Z",
      "guncelleme_tarih": "2025-09-21T21:30:00.000Z",
      "son_tarih": "2025-10-02T00:00:00.000Z",
      "etiketler": "rust,ffi,integration,napi",
      "parent_id": null
    }
  ],
  "tags": [
    {"isim": "setup"},
    {"isim": "infrastructure"},
    {"isim": "rust"},
    {"isim": "typescript"},
    {"isim": "test"},
    {"isim": "mcp"},
    {"isim": "contract"},
    {"isim": "parallel"},
    {"isim": "model"},
    {"isim": "database"},
    {"isim": "service"},
    {"isim": "tree-sitter"},
    {"isim": "parser"},
    {"isim": "tool"},
    {"isim": "api"},
    {"isim": "ffi"},
    {"isim": "integration"},
    {"isim": "napi"},
    {"isim": "cargo"},
    {"isim": "nodejs"}
  ],
  "task_tags": [],
  "templates": null,
  "dependencies": [
    {
      "kaynak_id": "t002-rust-workspace",
      "hedef_id": "t001-project-structure",
      "baglanti_tipi": "depends_on"
    },
    {
      "kaynak_id": "t003-typescript-project",
      "hedef_id": "t001-project-structure",
      "baglanti_tipi": "depends_on"
    },
    {
      "kaynak_id": "t034-codebase-model",
      "hedef_id": "t009-test-search-code",
      "baglanti_tipi": "depends_on"
    },
    {
      "kaynak_id": "t046-parser-service",
      "hedef_id": "t034-codebase-model",
      "baglanti_tipi": "depends_on"
    },
    {
      "kaynak_id": "t055-mcp-search-code",
      "hedef_id": "t046-parser-service",
      "baglanti_tipi": "depends_on"
    },
    {
      "kaynak_id": "t069-ffi-bridge",
      "hedef_id": "t055-mcp-search-code",
      "baglanti_tipi": "depends_on"
    }
  ]
}